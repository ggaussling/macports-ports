# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               active_variants 1.1
PortGroup               meson 1.0

# Please keep the pango and pango-devel ports as similar as possible.

name                    pango-devel
conflicts               pango
set my_name             pango
version                 1.44.6
checksums               rmd160  ec6e791baaba57e81465a339e8ccee28bc0f45d2 \
                        sha256  3e1e41ba838737e200611ff001e3b304c2ca4cdbba63d200a20db0b0ddc0f86c \
                        size    521672

set branch              [join [lrange [split ${version} .] 0 1] .]
categories              x11
maintainers             {ryandesign @ryandesign} openmaintainer
license                 LGPL-2+
license_noconflict      gobject-introspection

homepage                https://www.pango.org/
master_sites            gnome:sources/${my_name}/${branch}
platforms               darwin
distname                ${my_name}-${version}
dist_subdir             ${my_name}
use_xz                  yes
use_parallel_build      yes

description \
    Framework for the layout and rendering of i18n text

long_description \
    The goal of the Pango project is to provide an \
    open-source framework for the layout and rendering \
    of internationalized text.

depends_build-append \
    port:pkgconfig \
    port:gobject-introspection


# FIXME
# at present uses a fallback subproject for glib as our macports version is too old
# this makes it additionally install glib2 version 2.61.3
# this will obviously have to be changed to a new glib2 version in macports instead, but builds throug

#Dependency glib-2.0 found: NO found '2.58.3' but need: '>= 2.59.2'
#Run-time dependency glib-2.0 found: NO (tried pkgconfig, cmake and framework)
#Looking for a fallback subproject for the dependency glib-2.0

# this is needed for the glib2 subport to build, at least
# I don't know the tricks of python; we need
# /usr/bin/env python -> python37
# /usr/bin/env python3 -> python37
# so I did the following, and it worked.
# sudo port select python python37
# sudo port select python3 python37
set python.version 37
depends_build-append    port:py${python.version}-setuptools



depends_lib-append \
    path:lib/pkgconfig/glib-2.0.pc:glib2 \
    path:lib/pkgconfig/cairo.pc:cairo \
    port:fribidi \
    port:harfbuzz \
    port:fontconfig

configure.args-append   -Ddefault_library=both \
                        -Dintrospection=true \
                        -Duse_fontconfig=true

platform macosx {
    variant quartz {
        # Although this variant does nothing, pango will automatically build
        # itself differently depending on whether or not cairo is installed with
        # the quartz variant. Therefore this variant is necessary to be able to
        # distinguish whether an installed pango has Quartz support or not.
    }

    default_variants    +quartz
    # Don't allow Quartz support to be disabled. Keep the variant for awhile in
    # case any dependents are using the active_variants portgroup to check for it.
    variant_set         quartz

    if {[variant_isset quartz]} {
        require_active_variants path:lib/pkgconfig/cairo.pc:cairo quartz
    }
}

variant x11 {
# not sure whether to use this or fontconfig - build seems to want fontconfig but I didn't try this
#    depends_lib-append      port:Xft2
#    configure.args-delete   --without-x
#    configure.args-append   --x-include=${prefix}/include \
                            --x-lib=${prefix}/lib
}

default_variants        +x11
if {${os.platform} ne "darwin" || ${os.subplatform} ne "macosx"} {
    # When not on OS X, don't allow X11 support to be disabled, since it is the
    # only available option.
    variant_set         x11
}

if {[variant_isset x11]} {
    require_active_variants path:lib/pkgconfig/cairo.pc:cairo x11
}

post-destroot {
    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
# at least some of these extra files are no longer there
#    xinstall -m 0644 -W ${worksrcpath} AUTHORS ChangeLog COPYING MAINTAINERS NEWS README THANKS \
#        ${destroot}${docdir}
}

test.run                yes
test.target             check

# gobject-introspection uses g-ir-scanner, which uses $CC from env
if {[vercmp [macports_version] 2.5.99] >= 0} {
if {[variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}
} else {
if {[variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  CC='${configure.cc} -arch ${arch}'
        lappend merger_destroot_env(${arch})  CC='${configure.cc} -arch ${arch}'
    }
} else {
    build.env-append       CC="${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    CC="${configure.cc} ${configure.cc_archflags}"
}
}


livecheck.type          gnome-with-unstable
livecheck.name          ${my_name}
